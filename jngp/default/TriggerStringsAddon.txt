[TriggerEventStrings]
TriggerRegisterTrackableHitEvent="Trackable is Clicked"
TriggerRegisterTrackableHitEvent=~Trackable," is clicked"
TriggerRegisterTrackableHitEventHint="[UMSWE]"
TriggerRegisterTrackableTrackEvent="Cursor is Moved over Trackable"
TriggerRegisterTrackableTrackEvent="The cursor is moved over ",~Trackable
TriggerRegisterTrackableTrackEventHint="[UMSWE]"
TriggerRegisterPlayerUnitEvent="Player-Owned Unit Event (Conditional)"
TriggerRegisterPlayerUnitEvent="A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint="Adds a condtion to the event [UMSWE]"
TriggerRegisterEnterRegionSimple="Unit Enters Region"
TriggerRegisterEnterRegionSimple="A unit enters ",~Region,
TriggerRegisterEnterRegionSimpleHint="Use 'Event Response - Entering Unit' to refer to the unit entering the region [UMSWE]"
TriggerRegisterLeaveRegionSimple="Unit Leaves Region"
TriggerRegisterLeaveRegionSimple="A unit leaves ",~Region,
TriggerRegisterLeaveRegionSimpleHint="Use 'Event Response - Leaving Unit' to refer to the unit leaving the region [UMSWE]"
TriggerRegisterEnterRegion="A Unit Enters Region (Conditional)"
TriggerRegisterEnterRegion="A unit enters ",~Region," and matches ",~Condition
TriggerRegisterEnterRegionHint="Better than 'Unit Enters Rect' because you can get the Triggering Region. Use Entering Unit to match [UMSWE]"
TriggerRegisterLeaveRegion="A Unit Leaves Region (Conditional)"
TriggerRegisterLeaveRegion="A unit leaves ",~Region," and matches ",~Condition
TriggerRegisterLeaveRegionHint="Better than 'Unit Leaves Rect' because you can get the Triggering Region. Use Leaving Unit to match [UMSWE]"
TriggerRegisterGameStateEvent="Game State Event"
TriggerRegisterGameStateEvent=~Gamestate," becomes ",~Operation," ",~Value
TriggerRegisterGameStateEventHint="[UMSWE]"
TriggerRegisterUnitStateEvent="Unit State Event"
TriggerRegisterUnitStateEvent=~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint="[UMSWE]"
TriggerRegisterPlayerEvent="Advanced Player Event"
TriggerRegisterPlayerEvent=~Player," ",~PlayerOptionEvent
TriggerRegisterPlayerEventHint=""Just here for COMPATIBILITY reasons. Better use the specific player state events. [UMSWE]"

[TriggerConditionStrings]
OperatorCompareEventId="Trigger Event Id Comparison"
OperatorCompareEventId=~Value," ",~Operator," ",~Value
OperatorCompareEventIdHint="[UMSWE]"
OperatorCompareTrackable="Trackable Comparison"
OperatorCompareTrackable=~Value," ",~Operator," ",~Value
OperatorCompareTrackableHint="[UMSWE]"
OperatorCompareUbersplat="Ubersplat Comparison"
OperatorCompareUbersplat=~Value," ",~Operator," ",~Value
OperatorCompareUbersplatHint="[UMSWE]"
OperatorCompareImage="Image Comparison"
OperatorCompareImage=~Value," ",~Operator," ",~Value
OperatorCompareImageHint="[UMSWE]"
OperatorCompareLightning="Lightning Comparison"
OperatorCompareLightning=~Value," ",~Operator," ",~Value
OperatorCompareLightningHint="[UMSWE]"
OperatorCompareTriggerAction="Trigger Action Comparison"
OperatorCompareTriggerAction=~Value," ",~Operator," ",~Value
OperatorCompareTriggerActionHint="[UMSWE]"
OperatorCompareTriggerCondition="Trigger Condition Comparison"
OperatorCompareTriggerCondition=~Value," ",~Operator," ",~Value
OperatorCompareTriggerConditionHint="[UMSWE]"
OperatorCompareUnitState="Unitstate Comparison"
OperatorCompareUnitState=~Value," ",~Operator," ",~Value
OperatorCompareUnitStateHint=""[UMSWE]"
OperatorComparePlayerState="Playerstate Comparison"
OperatorComparePlayerState=~Value," ",~Operator," ",~Value
OperatorComparePlayerStateHint="[UMSWE]"
OperatorCompareRegion="Region Comparison"
OperatorCompareRegion=~Value," ",~Operator," ",~Value
OperatorCompareRegionHint="[UMSWE]"
OperatorCompareGameState="Gamestate Comparison"
OperatorCompareGameState=~Value," ",~Operator," ",~Value
OperatorCompareGameStateHint="[UMSWE]"
 ="Custom Script"
 ="(",~Script Code,")"
 Hint="[UMSWE]"
OperatorCompareMultiboardItem="Multiboard Item Comparison"
OperatorCompareMultiboardItem=~Value," ",~Operator," ",~Value
OperatorCompareMultiboardItemHint="Just here for COMPATIBILITY reasons. Multiboard items should not be used. [UMSWE]"

[TriggerActionStrings]
// cleanup natives
DestroyTimer="Destroy"
DestroyTimer="Destroy ",~Timer
DestroyTimerHint="Removes a timer from memory. Always destroy no longer needed timers. [UMSWE]"
DialogDestroy="Destroy"
DialogDestroy="Destroy ",~Dialog
DialogDestroyHint="Removes a dialog from memory. Always destroy no longer needed dialogs. [UMSWE]"
DestroyForce="Destroy"
DestroyForce="Destroy ",~Force
DestroyForceHint="Removes a Player Group from memory. Always destroy no longer needed Player Groups. [UMSWE]"
DestroyGroup="Destroy Unit Group"
DestroyGroup="Destroy unit group ",~Group
DestroyGroupHint="Destroy unit groups you don't need any mor to save memory [UMSWE]"
DestroyTrigger="Destroy"
DestroyTrigger="Destroy ",~Trigger
DestroyTriggerHint="Destroys a trigger [UMSWE]"
RemoveRegion="Remove Region"
RemoveRegion="Remove ",~Region
RemoveRegionHint="Use this to delete a region to save memory. The variable itself will remain without data [UMSWE]"

// patch additions
MultiboardSetItemsValueColor="All Items - Set Item Lable Color"
MultiboardSetItemsValueColor="Set item lable color for all items of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemsValueColorHint="Changes the color of all items. The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]"
MultiboardSetItemValueColor="Set Item Lable Color"
MultiboardSetItemValueColor="Set item lable color for multiboard item ",~Item," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetItemValueColorHint="The color is specified as RGBA (Red, Green, Blue, Alpha) [UMSWE]"
AddLightningEx="Create Lightning Effect (Advanced)"
AddLightningEx="Create a ",~Type,", ",~Visibility," lightning effect from source (",~X1,",",~Y1,",",~Z1,") to target (",~X2,",",~Y2,",",~Z2,") "
AddLightningExHint="Use coordinates, Z values are elevation [UMSWE]"
MoveLightningEx="Move Lightning Effect (Advanced)"
MoveLightningEx="Make ",~Bolt," ",~Boolean," and move it to reach from (",~X1,",",~Y1,",",~Z1,") to (",~X2,",",~Y2,",",~Z2,") "
MoveLightningExHint="Use coordinates, Z values are elevation [UMSWE]"
SetHeroAgi="Set Hero Agility"
SetHeroAgi="Set Agility of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroAgiHint="Changes the hero's agility [UMSWE]"
SetHeroInt="Set Hero Intelligence"
SetHeroInt="Set Intelligence of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroIntHint="Changes the hero's Intelligence [UMSWE]"
SetHeroStr="Set Hero Strength"
SetHeroStr="Set Strength of ",~Hero," to ",~Integer,", the effect will be ",~Permanent
SetHeroStrHint="Changes the hero's strength [UMSWE]"

// group orders
GroupTargetOrderBJ="Issue Order Targeting A Unit (takes string)"
GroupTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderBJHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]"
GroupTargetOrderById="Issue Order Targeting A Unit (takes ordercode)"
GroupTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderByIdHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]"
GroupItemTargetOrderBJ="Issue Order Targeting An Item (takes string)"
GroupItemTargetOrderBJ="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderBJHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]"
GroupItemTargetOrderById="Issue Order Targeting An Item (takes ordercode)"
GroupItemTargetOrderById="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderByIdHint="This will issue an order to at most 12 units from the specified unit group. Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]"
GroupPointOrderLocBJ="Issue Order Targeting A Point (takes string)"
GroupPointOrderLocBJ="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocBJHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupPointOrderByIdLoc="Issue Order Targeting A Point (takes ordercode)"
GroupPointOrderByIdLoc="Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderByIdLocHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupTargetDestructableOrderS="Issue Order Targeting A Destructible (takes string)"
GroupTargetDestructableOrderS="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderSHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupTargetOrderByIdD="Issue Order Targeting A Destructible (takes ordercode)"
GroupTargetOrderByIdD="Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetOrderByIdDHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupImmediateOrderBJ="Issue Order With No Target (takes string)"
GroupImmediateOrderBJ="Order ",~Unit Group," to ",~Order
GroupImmediateOrderBJHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupImmediateOrderById="Issue Order With No Target (takes ordercode)"
GroupImmediateOrderById="Order ",~Unit Group," to ",~Order
GroupImmediateOrderByIdHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"

// group enumeration
GroupEnumUnitsOfType="Add Units of Type to Group"
GroupEnumUnitsOfType="Take group ",~group," and add all units of type ",~unitname," matching condition ",~Condition
GroupEnumUnitsOfTypeHint="Use the names in the 6th column in UnitUI.slk as unitnames [UMSWE]"
GroupEnumUnitsOfTypeCounted="Add Number Of Units Of Type"
GroupEnumUnitsOfTypeCounted="To ",~Group" add units of type ",~Type," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsOfTypeCountedHint="For the type use the unit names of the 6th column in UnitUI.slk [UMSWE]"
GroupEnumUnitsOfPlayer="Add Units Of Player"
GroupEnumUnitsOfPlayer="To ",~Group," add units of player ",~Player," matching ",~Condition
GroupEnumUnitsOfPlayerHint="[UMSWE]"
GroupEnumUnitsInRect="Add Units In Rect"
GroupEnumUnitsInRect="To ",~Group," add units in ",~Rect," matching ",~Condition
GroupEnumUnitsInRectHint="[UMSWE]"
GroupEnumUnitsInRectCounted="Add Number Of Units In Rect"
GroupEnumUnitsInRectCounted="To ",~Group," add units in ",~Rect," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRectCountedHint="[UMSWE]"
GroupEnumUnitsInRangeOfLoc="Add Units in Range of Point"
GroupEnumUnitsInRangeOfLoc="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition
GroupEnumUnitsInRangeOfLocHint="[UMSWE]"
GroupEnumUnitsInRangeOfLocCounted="Add Number of Units in Range of Point"
GroupEnumUnitsInRangeOfLocCounted="To ",~Group," add units near ",~Point," in a range of ",~Range," matching ",~Condition,". Limit number of units to ",~Nr
GroupEnumUnitsInRangeOfLocCountedHint="[UMSWE]"
GroupEnumUnitsSelected="Add Units Selected by Player"
GroupEnumUnitsSelected="To ",~Group," add units selected by ",~Player," matching ",~Condition
GroupEnumUnitsSelectedHint="[UMSWE]"

// missing functions
SetPlayerTechMaxAllowed="Set Max Number Of Units by Type"
SetPlayerTechMaxAllowed="For ",~Player,", set the maximun number of ",~Unit-Type," to ",~Number
SetPlayerTechMaxAllowedHint="Just here for COMPATIBILITY reasons. Use the specific functions provided by blizzard instead. [UMSWE]"
DialogAddButton="Create Dialog Button With Hotkey"
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey: ",~Key
DialogAddButtonHint="Use ASCII numbers for the hotkey number [UMSWE]"
DialogAddQuitButton="Create Quit Button"
DialogAddQuitButton="Create a quit button for dialog ",~Dialog," (",~Show," score screen) labeled ",~Text," and use the shortcut ",~ASCII
DialogAddQuitButtonHint="Use ASCII numbers to add a shortcut [UMSWE]"
DisplayTextToPlayer="Text Message to Player (Auto-Timed)"
DisplayTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") the text: ",~Text
DisplayTextToPlayerHint="The text is shown for an amount of time that automatically increases with the text length. The offset is the X,Y position on the screen. [UMSWE]"
DisplayTimedTextToPlayer="Text Message to Player (Explicitly Timed)"
DisplayTimedTextToPlayer="Display to ",~Player,", at offset (",~xpos,", ",~ypos,") for ",~Time," seconds the text: ",~Text
DisplayTimedTextToPlayerHint="The offset is the X,Y position on the screen. [UMSWE]"
EnumItemsInRect="Pick Every Item In Rect Matching Condition And Do Action"
EnumItemsInRect="Pick every item in ",~Rect," matching ",~Condition," and do ",~Action
EnumItemsInRectHint="Use 'Picked Item' to refer each item as it is picked.  Wait actions should not be used within this function. [UMSWE]"
UnitAddItemToSlotById="Create Item In Hero Inventory Slot"
UnitAddItemToSlotById="Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint="Creates an item in a specific item slot [UMSWE]"
SelectHeroSkill2="Learn Skill (Takes Abilcode)"
SelectHeroSkill2="Learn skill for ",~Hero,": ",~Skill
SelectHeroSkill2Hint="This only works if the Hero has at least one skill point to spend. [UMSWE]"
TimerStart="Start Timer (With Callback)"
TimerStart="Start ",~Timer," lasting ",~Time," and ",~Repeat," and execute ",~Action," when it expires"
TimerStartHint="[UMSWE]"
PlayCinematic="Play Movie"
PlayCinematic="Play the cinematic movie called ",~name
PlayCinematicHint="The Movie must be in the Movies folder of Warcraft and in the same format as the other movies. String without .mpq "[UMSWE]"
RandomDistAddItem="Add Item To Random Item Pool"
RandomDistAddItem="Add the item type ",~id," to the pool and give it a chance of ",~percent," to be chosen"
RandomDistAddItemHint="Use 'Get Random Item From Pool' to use your own item pool, the chances of all items added to the pool are summed up to calculate the final chance [UMSWE]"
RandomDistReset="Reset Random Item Pool"
RandomDistReset="Reset your own pool for random items"
RandomDistResetHint="[UMSWE]"
SetUnitLookAtS="Lock Body-Part Facing (Takes String)"
SetUnitLookAtS="Lock ",~Unit,"'s ",~Source," to face ",~Unit,", offset by (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtSHint="The unit's body-part will continue to face the target until 'Reset Body-Part Facing' is used. The offset is taken as (X, Y, Z) from the target's feet. Use this to specify any bone by it's name. [UMSWE]"
UnitApplyTimedLifeB="Apply Life Timer (takes buffcode)"
UnitApplyTimedLifeB="Set timed life for unit ",~Unit," with buff ID ",~Buff Type," and duration ",~Integer," seconds"
UnitApplyTimedLifeBHint="Gives a unit a life timer. [UMSWE]"
UnitMakeAbilityPermanentBJ="Make Ability Permanent"
UnitMakeAbilityPermanentBJ="For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentBJHint="[UMSWE]"
SetUnitAnimationByIndex="Set Unit Animation by Index"
SetUnitAnimationByIndex="Set current animation for ",~unit," to its ",~nr,"th animation"
SetUnitAnimationByIndexHint="Use the arrow buttons in the preview window to see all animations [UMSWE]"
UnitIgnoreAlarm="Ignore Alarm"
UnitIgnoreAlarm="Make unit ",~Unit," ignore alarms ",~Flag
UnitIgnoreAlarmHint="[UMSWE]"
ExecuteFunc="Execute Function"
ExecuteFunc="Execute ",~Function
ExecuteFuncHint="Use 'Conversion - Trigger Name To Function' to access the actions part of a trigger, the called function shouldn't have parameters [UMSWE]"
EnableUserUI="Enable/Disable User UI"
EnableUserUI=~Enable/Disable," User UI"
EnableUserUIHint="[UMSWE]"
EndGame="End Game"
EndGame="End game and ",~Show/Skip," scores"
EndGameHint="No victory or defeat dialog [UMSWE]"
ChangeLevel="Load Next Map"
ChangeLevel="End game, load the map ",~Mapname," and ",~Show/Skip," scores"
ChangeLevelHint="No victory or defeat dialog and no 'Connect to Server Bug' [UMSWE]"
RestartGame="Restart Game"
RestartGame="Restart the current map and ",~Show/Skip," scores"
RestartGameHint="No victory or defeat dialog [UMSWE]"
DisableRestartMission="Disable Restart Mission"
DisableRestartMission="Disable restart mission ",~Flag
DisableRestartMissionHint="[UMSWE]"
DoNotSaveReplay="Do Not Save Replay"
DoNotSaveReplay="Do not save replay"
DoNotSaveReplayHint="[UMSWE]"
SetIntegerGameState="Set Game State"
SetIntegerGameState="Set ",~Gamestate," to ",~Value
SetIntegerGameStateHint="[UMSWE]"
SyncSelections="Synchronize Selections"
SyncSelections="Synchronize the unit selections"
SyncSelectionsHint="Used to avoid desyncs before getting the selection state with custom script calls [UMSWE]"

// locations and rects
MoveLocation="Move Point"
MoveLocation="Move ",~Point," to offset(",~X,", ",~Y,")"
MoveLocationHint="[UMSWE]"
RemoveLocation="Remove Point"
RemoveLocation="Remove ",~Location
RemoveLocationHint="Use this to delete a point to save memory. The variable itself will remain without data [UMSWE]"
MoveRectTo="Move to Offset"
MoveRectTo="Center ",~Rect," on offset(",~Real,", ",~Real,")"
MoveRectToHint="This has no effect unless the specified rect is a variable [UMSWE]"
RemoveRect="Remove"
RemoveRect="Remove ",~Rect
RemoveRectHint="Use this to delete a rect to save memory. The variable itself will remain without data [UMSWE]"

// triggers
TriggerAddAction="Add Action To Trigger"
TriggerAddAction="Take ",~Trigger," and add this action: ",~Action
TriggerAddActionHint="[UMSWE]"
TriggerAddCondition="Add Condition To Trigger"
TriggerAddCondition="Take ",~Trigger," and add this condition: ",~Condition
TriggerAddConditionHint="[UMSWE]"
TriggerRemoveCondition="Remove Condition"
TriggerRemoveCondition="Take ",~Trigger," and remove the condition ",~Boolexp
TriggerRemoveConditionHint="Removes a condition from a trigger [UMSWE]"
TriggerClearConditions="Clear Conditions"
TriggerClearConditions="Take ",~Trigger," and remove all conditions "
TriggerClearConditionsHint="Removes all conditions from a trigger [UMSWE]"
TriggerRemoveAction="Remove Action"
TriggerRemoveAction="Take ",~Trigger," and remove the action ",~Action
TriggerRemoveActionHint="Removes an action from a trigger [UMSWE]"
TriggerClearActions="Clear Actions"
TriggerClearActions="Take ",~Trigger," and remove all actions"
TriggerClearActionsHint="Removes all actions from a trigger [UMSWE]"
ResetTrigger="Reset Trigger"
ResetTrigger="Reset ",~Trigger
ResetTriggerHint="Resets a trigger to its original state [UMSWE]"
QueuedTriggerRemoveByIndex="Remove Trigger From Trigger Queue by Index"
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint="Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]"

// unit orders
IssueInstantTargetOrder="Give Item from Unit to Unit"
IssueInstantTargetOrder="Order ",~Unit," to ",~Order," ",~Item," to ",~Unit
IssueInstantTargetOrderHint="The ordered hero will walk to the target hero to hand the item over. [UMSWE]"
IssueNeutralImmediateOrderById="Buy Unit from Store"
IssueNeutralImmediateOrderById="For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint="[UMSWE]"
IssueTargetOrderBJ="Issue Order Targeting A Unit (Takes String)"
IssueTargetOrderBJ="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderBJHint="Use this to enter a string as order instead of picking a preset [UMSWE]"
IssueTargetOrderById="Issue Order Targeting A Unit (Takes Ordercode)"
IssueTargetOrderById="Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderByIdHint="[UMSWE]"
IssuePointOrderLocBJ="Issue Order Targeting A Point (Takes String)"
IssuePointOrderLocBJ="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocBJHint="Use this to enter a string as order instead of picking a preset [UMSWE]"
IssuePointOrderByIdLoc="Issue Order Targeting A Point (Takes Ordercode)"
IssuePointOrderByIdLoc="Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderByIdLocHint="[UMSWE]"
IssueTargetOrderD="Issue Order Targeting A Destructible (Takes String)"
IssueTargetOrderD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderDHint="Use this to enter a string as order instead of picking a preset [UMSWE]"
IssueTargetOrderByIdD="Issue Order Targeting A Destructible (Takes Ordercode)"
IssueTargetOrderByIdD="Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetOrderByIdDHint="[UMSWE]"
IssueImmediateOrderBJ="Issue Order With No Target (Takes String)"
IssueImmediateOrderBJ="Order ",~Unit," to ",~Order
IssueImmediateOrderBJHint="Use this to enter a string as order instead of picking a preset [UMSWE]"
IssueImmediateOrderById="Issue Order With No Target (Takes Ordercode)"
IssueImmediateOrderById="Order ",~Unit," to ",~Order
IssueImmediateOrderByIdHint="[UMSWE]"
IssueItemTargetOrderS="Issue Order Targeting An Item (Takes String)"
IssueItemTargetOrderS="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderSHint="[UMSWE]"
IssueItemTargetOrderId="Issue Order Targeting An Item (Takes Ordercode)"
IssueItemTargetOrderId="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderIdHint="[UMSWE]"

// region natives
RegionAddCell="Add Cell To Region"
RegionAddCell="Take ",~region," and add a cell at location (",~X,",",~Y,")"
RegionAddCellHint="[UMSWE]"
RegionAddCellAtLoc="Region Add Cell At Location"
RegionAddCellAtLoc="Take ",~region," and add a cell at ",~location
RegionAddCellAtLocHint="[UMSWE]"
RegionAddRect="Add Rect To Region"
RegionAddRect="Take ",~region," and add ",~rect," to it"
RegionAddRectHint="[UMSWE]"
RegionClearCell="Remove Cell From Region"
RegionClearCell="Take ",~region," and remove the cell at (",~X,",",~Y,")"
RegionClearCellHint="[UMSWE]"
RegionClearCellAtLoc="Remove Cell At Location From Region"
RegionClearCellAtLoc="Take ",~region," and remove the cell at",~location
RegionClearCellAtLocHint="[UMSWE]"
RegionClearRect="Remove Rect From Region"
RegionClearRect="Take ",~region," and remove ",~rect," from it"
RegionClearRectHint="[UMSWE]"

// game cache
FlushStoredInteger="Flush Stored Integer"
FlushStoredInteger="Flush the Integer stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredIntegerHint="[UMSWE]"
FlushStoredBoolean="Flush Stored Boolean"
FlushStoredBoolean="Flush the Boolean stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredBooleanHint="[UMSWE]"
FlushStoredReal="Flush Stored Real"
FlushStoredReal="Flush the Real stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredRealHint="[UMSWE]"
FlushStoredUnit="Flush Stored Unit"
FlushStoredUnit="Flush the Unit stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredUnitHint="[UMSWE]"
FlushStoredString="Flush Stored String"
FlushStoredString="Flush the String stored in gamecache ",~Cache," with mission key ",~Key," and key ",~Key
FlushStoredStringHint="[UMSWE]"

// compatibility
CreateDestructableZA="Create With Z Offset"
CreateDestructableZA="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZAHint="Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]"
CreateDeadDestructableZA="Create With Z Offset (Dead)"
CreateDeadDestructableZA="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZAHint="Just here for COMPATIBILITY reasons. Better use the function returning the destructable to save it to a variable. [UMSWE]"
DialogAddButtonWithHotkeyBJ="Create Dialog Button with Hotkey (GU Version)"
DialogAddButtonWithHotkeyBJ="Create a dialog button for ",~Dialog," labelled ",~Text," and keycode ",~Code
DialogAddButtonWithHotkeyBJHint="Just here for COMPATIBILITY reasons. Better use the common.j version of this action. [UMSWE]"
CreateTrackable="Create Trackable Object"
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint="Just here for COMPATIBILITY reasons. Better use the function returning the trackable to save it to a variable. [UMSWE]"
DestroyMultiboard="Destroy Multiboard"
DestroyMultiboard="Destroy multiboard ",~board
DestroyMultiboardHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardDisplay="Display Multiboard"
MultiboardDisplay="Take multiboard ",~board," and ",~ShowHide," it"
MultiboardDisplayHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardMinimize="Minimize Multiboard"
MultiboardMinimize="Take multiboard ",~board," and ",~Min," it"
MultiboardMinimizeHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetTitleTextColor="Set Title Text Color"
MultiboardSetTitleTextColor="Set title text color of multiboard ",~board," to ",~Value," % Red, ",~Value," % Green, ",~Value," % Blue and ",~Value," alpha channel"
MultiboardSetTitleTextColorHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemsStyle="All Items - Set Item Style"
MultiboardSetItemsStyle="Set item style for all items of multiboard ",~board," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemsStyleHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemsValue="All Items - Set Item Value"
MultiboardSetItemsValue="Set the label for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsValueHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemsWidth="All Items - Set Item Width"
MultiboardSetItemsWidth="Set width for all items of multiboard ",~board," to ",~Value
MultiboardSetItemsWidthHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemsIcon="All Items - Set Item Icon"
MultiboardSetItemsIcon="Set used icon for all items of multiboard ",~board," to ",~Icon
MultiboardSetItemsIconHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardReleaseItem="Release Multiboard Item"
MultiboardReleaseItem="Release multiboard item ",~Item
MultiboardReleaseItemHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemStyle="Set Item Style"
MultiboardSetItemStyle="Set item style of multiboard item ",~Item," to ",~ShowHide," Values and ",~ShowHide," Icons"
MultiboardSetItemStyleHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemValue="Set Item Value"
MultiboardSetItemValue="Set the label for multiboard item ",~Item," to ",~Value
MultiboardSetItemValueHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemWidth="Set Item Width"
MultiboardSetItemWidth="Set width for multiboard item ",~Item," to ",~Value
MultiboardSetItemWidthHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardSetItemIcon="Set Item Icon"
MultiboardSetItemIcon="Set used icon for multiboard item ",~Item," to ",~Icon
MultiboardSetItemIconHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
UnitApplyTimedLife="Apply Life Timer"
UnitApplyTimedLife="Set timed life for unit ",~Unit," with buff ID ",~Integer," and duration ",~Integer," seconds"
UnitApplyTimedLifeHint="Just here for COMPATIBILITY reasons. Better use the new official action. [UMSWE]"
AddSpellEffectByIdLoc="Create Spell Effect At Location"
AddSpellEffectByIdLoc="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]"
AddSpellEffectTargetById="Create Spell Effect On Unit"
AddSpellEffectTargetById="Create the illusion of ",~Ability," with that spell's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]"
AddSpellEffectByIdLocB="Create Buff Effect At Location"
AddSpellEffectByIdLocB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," effect at the location ",~Location
AddSpellEffectByIdLocBHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]"
AddSpellEffectTargetByIdB="Create Buff Effect On Unit"
AddSpellEffectTargetByIdB="Create the illusion of ",~Buff," with that buff's ",~EffectTypeOption," model attached to ",~Unit," on it's ",~Attackment Point
AddSpellEffectTargetByIdBHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]"
IssueItemTargetOrder="Issue Order Targeting An Item"
IssueItemTargetOrder="Order ",~Unit," to ",~Order," ",~Item
IssueItemTargetOrderHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]"
GroupItemTargetOrder="Group Issue Order Targeting An Item"
GroupItemTargetOrder="Order ",~Unit Group," to ",~Order," ",~Item
GroupItemTargetOrderHint="Just here for COMPATIBILITY reasons. You may still use this action or you can use the new offical one. [UMSWE]"

[TriggerCallStrings]
// object creation
CreateTrackable="Create Trackable Object"
CreateTrackable="Create trackable object using path ",~Path," at Location (",~X,",",~Y,") facing ",~Degrees
CreateTrackableHint="You can register mouseover and mouseclick events on the object but can't remove it anymore. [UMSWE]"
CreateItemLoc="Create Item At Location"
CreateItemLoc="Create ",~Item," at ",~Point
CreateItemLocHint="[UMSWE]"
CreateUnit="Create Unit At Offset"
CreateUnit="For ",~Player," create a unit of type ",~Type," at offset (",~X,", ",~Y,") facing ",~Direction," degrees"
CreateUnitHint="[UMSWE]"
CreateUnitAtLoc="Create Unit At Location"
CreateUnitAtLoc="For ",~Player," create a unit of type ",~Type," at location ",~Location," facing ",~Direction," degrees"
CreateUnitAtLocHint="[UMSWE]"
CreateDestructableZ="Create with Z offset"
CreateDestructableZ="Create a ",~Destructible-Type," at offset(",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDestructableZHint="The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]"
CreateDeadDestructableZ="Create with Z offset (dead)"
CreateDeadDestructableZ="Create a dead ",~Destructible-Type," at offset (",~xpos,", ",~ypos,", ",~zpos,") facing ",~Direction," with scale ",~Scale," and variation ",~Variation
CreateDeadDestructableZHint="The facing angle is expected in degrees, with 0 being east and 90 being north. The offset is taken as (X, Y, Z) [UMSWE]"
DialogAddButton="Create Dialog Button With Hotkey"
DialogAddButton="Create a dialog button for ",~Dialog," labelled ",~Text," with hotkey ",~Keycode
DialogAddButtonHint="Creates a dialog button with a hotkey based on ASCII value. [UMSWE]"
InitGameCache="Create"
InitGameCache="Create a game cache from ",~FileName
InitGameCacheHint="A game cache allows you to store data between maps, or between games on a given map.  If the specified file does not exist, it will be created. [UMSWE]"
CreateTimer="Create Timer"
CreateTimer="Create Timer"
CreateTimerHint="Use this to initialize timer array items [UMSWE]"
CreateTimerBJ="Create Timer"
CreateTimerBJ="Create a periodic ",~Choose," timer lasting ",~time
CreateTimerBJHint="[UMSWE]"
CreateTrigger="Create Trigger"
CreateTrigger="Create Trigger"
CreateTriggerHint="Use this to initialize trigger arrays [UMSWE]"
DialogCreate="New Dialog"
DialogCreate="New Dialog"
DialogCreateHint="Used to initialize a dialog array or clear a dialog variable [UMSWE]"
CreateForce="Create Force"
CreateForce="Create new force"
CreateForceHint="Used to initialize force arrays [UMSWE]"
CreateGroup="Create Unit Group"
CreateGroup="Create Unit Group"
CreateGroupHint="Use this to initialize unit group arrays [UMSWE]"
CreateRegion="Create Region"
CreateRegion="Create a empty region"
CreateRegionHint="Used to create empty regions to which you can add cells [UMSWE]"
AddSpecialEffectLoc="Create Special Effect at Point"
AddSpecialEffectLoc="Create a special effect using ",~Model File," at ",~Point
AddSpecialEffectLocHint="[UMSWE]"
AddSpecialEffect="Create Special Effect at Off-set"
AddSpecialEffect="Crate a special effect using ",~Model File," at ",~X," , ",~Y
AddSpecialEffectHint="[UMSWE]"
AddSpecialEffectTarget="Create Special Effect at target unit"
AddSpecialEffectTarget="Create a special effect using ",~Model File," On ",~Unit," 's ",~Attachment Point
AddSpecialEffectTargetHint="[UMSWE]"

// event response
GetTriggeringTrackable="Triggering Trackable"
GetTriggeringTrackable="Triggering trackable"
GetTriggeringTrackableHint="[UMSWE]"
GetEventGameState="Get Triggering Game State"
GetEventGameState="Triggering Game State"
GetEventGameStateHint="To see, which gamestate event fired the trigger [UMSWE]"
GetRescuer="Rescuing Unit"
GetRescuer="Get rescuing unit"
GetRescuerHint="For unis is rescued event [UMSWE]"
GetWinningPlayer="Winning Player"
GetWinningPlayer="Get winning player"
GetWinningPlayerHint="For victory event [UMSWE]"
GetEventUnitState="Get Triggering Unit State"
GetEventUnitState="Get triggering unit state"
GetEventUnitStateHint="To see, which unitstate event fired the trigger [UMSWE]"
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerState="Get Triggering Player State"
GetEventPlayerStateHint="To see, which playerstate event fired the trigger [UMSWE]"
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayer="Detecting Player"
GetEventDetectingPlayerHint="When responding to a 'Unit Is detected' unit event, this refers to the player, who detects the unit [UMSWE]"
GetTriggeringRegion="Get Triggering Region"
GetTriggeringRegion="Get triggering region"
GetTriggeringRegionHint="Event response for unit enters/leaves region events [UMSWE]"
GetDetectedUnit="Get Detected Unit"
GetDetectedUnit="Get detected unit"
GetDetectedUnitHint="Event response for the unit detected event [UMSWE]"
GetTriggerEventId="Event ID"
GetTriggerEventId="Last Fired Event"
GetTriggerEventIdHint="Returns the last fired event [UMSWE]"

// string query
GetAbilityEffectById="Buff Effect Art By Id"
GetAbilityEffectById="",~Buff," effect ",~EffectType," ",~Index
GetAbilityEffectByIdHint="[UMSWE]"
GetAbilitySoundById="Ability Effect Sound By Id"
GetAbilitySoundById="",~Ability," sound ",~SoundType
GetAbilitySoundByIdHint="[UMSWE]"
LeaderboardGetLabelText="Title"
LeaderboardGetLabelText="Title of ",~Leaderboard
LeaderboardGetLabelTextHint="[UMSWE]"

// integer query
GetIntegerGameState="Game State"
GetIntegerGameState=~Gamestate
GetIntegerGameStateHint="[UMSWE]"
IntegerTertiaryOp="Tertiary Integer Option"
IntegerTertiaryOp="If ",~Condition," is equal to true then use ",~Nr," else use ",~Nr
IntegerTertiaryOpHint="[UMSWE]"
LeaderboardGetItemCount="Leaderboard Player Count"
LeaderboardGetItemCount="Player count of ",~Leaderboard
LeaderboardGetItemCountHint="[UMSWE]"
QueuedTriggerGetIndex="Index Of Queued Trigger"
QueuedTriggerGetIndex="Index of ",~Trigger," in the trigger queue"
QueuedTriggerGetIndexHint="Searches the queue for a given trigger, returning the index of the trigger within the queue if it is found, or -1 if it is not found [UMSWE]"
RandomDistChoose="Get Random Item From Pool"
RandomDistChoose="Get a random item from your own item pool"
RandomDistChooseHint="Use 'Add Random Item to Pool' to create your own item pool [UMSWE]"
GetPlayerTypedUnitCount="Count Units of Player of Type"
GetPlayerTypedUnitCount="Count units of player ",~Player," of type ",~unitname," and include incomplete units ",~Include," and include currently upgrading buildings ",~Include
GetPlayerTypedUnitCountHint="Use the names of the 6th column of UnitUI.slk as unitnames [UMSWE]"

// real query
GetUnitX="X Of Unit"
GetUnitX="X of ",~Unit
GetUnitXHint="[UMSWE]"
GetUnitY="Y Of Unit"
GetUnitY="Y of ",~Unit
GetUnitYHint="[UMSWE]"

// boolean query
IsTimerDialogDisplayed="Timer Dialog Is Displayed"
IsTimerDialogDisplayed=~Timer Window," is displayed"
IsTimerDialogDisplayedHint="A timer window is showing [UMSWE]"
IsLeaderboardDisplayed="Leaderboard Is Displayed"
IsLeaderboardDisplayed=~Leaderboard," is displayed"
IsLeaderboardDisplayedHint="[UMSWE]"
IsLocationInRegion="Is Point In Region"
IsLocationInRegion="Does ",~Region," contain point ",~Location
IsLocationInRegionHint="[UMSWE]"
IsUnitInRegion="Is Unit In Region"
IsUnitInRegion="Does ",~Region," contain unit ",~Unit
IsUnitInRegionHint="[UMSWE]"
IsPointInRegion="Region Contains Coordinates"
IsPointInRegion=~Region," contains offset (",~Real,", ",~Real,")"
IsPointInRegionHint="[UMSWE]"
IsUnitInForce="Unit In Player Group"
IsUnitInForce=~Unit," is in ",~Player Group
IsUnitInForceHint="[UMSWE]"
IsUnitOwnedByPlayer="Unit Is Owned by Player"
IsUnitOwnedByPlayer=~Unit," is owned by ",~Player
IsUnitOwnedByPlayerHint="[UMSWE]"
IsUnitInRange="Is Unit in Range of Unit"
IsUnitInRange="Is ",~Unit," near ",~Unit," and withing a range of ",~Range
IsUnitInRangeHint="[UMSWE]"
IsUnitInRangeLoc="Is Unit in Range of Point"
IsUnitInRangeLoc="Is ",~Unit," near ",~Point," and within a range of ",~Range
IsUnitInRangeLocHint="[UMSWE]"
IsUnitRace="Unit Race Check"
IsUnitRace=~Unit," is a ",~Race,
IsUnitRaceHint="Checks what race a unit is [UMSWE]"
CompareRectsBJ="Rect Matches Rect"
CompareRectsBJ=~Rect," matches ",~Rect
CompareRectsBJHint="Use this to compare rects [UMSWE]"
CompareLocationsBJ="Location Matches Location"
CompareLocationsBJ=~Point," matches ",~Point
CompareLocationsBJHint="Use this to compare locations [UMSWE]"
RectContainsCoords="Rect Contains Coordinates"
RectContainsCoords=~Rect," contains (",~Real,", ",~Real,")"
RectContainsCoordsHint="A rect contains the point (x,y) [UMSWE]"
UnitIgnoreAlarmToggled="Does Unit Ignore Alarm"
UnitIgnoreAlarmToggled="Does unit ",~Unit," ignore alarm"
UnitIgnoreAlarmToggledHint="[UMSWE]"

// gamecache stuff
HaveStoredInteger="Is Integer Stored"
HaveStoredInteger="Is Integer in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredIntegerHint="[UMSWE]"
HaveStoredBoolean="Is Boolean Stored"
HaveStoredBoolean="Is Boolean in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredBooleanHint="[UMSWE]"
HaveStoredReal="Is Real Stored"
HaveStoredReal="Is Real in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredRealHint="[UMSWE]"
HaveStoredUnit="Is Unit Stored"
HaveStoredUnit="Is Unit in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredUnitHint="[UMSWE]"
HaveStoredString="Is String Stored"
HaveStoredString="Is String in gamecache ",~Cache," with mission key ",~Key," and key ",~Key," already stored"
HaveStoredStringHint="[UMSWE]"

// misc
FirstOfGroup="First Unit of Group"
FirstOfGroup="First unit of group ",~Group
FirstOfGroupHint="[UMSWE]"
GetLocalPlayer="Local Player"
GetLocalPlayer="Local player"
GetLocalPlayerHint="Use a player comparison with local player to do certain actions just for certain players on bnet. [UMSWE]"

// script code
exitwhen="exitwhen"
exitwhen="exitwhen ",~Condition
exitwhenHint="Used between loop and endloop, specifies when to exit the loop (only works with the Custom Script action) [UMSWE]"
 ="JASS Code"
 =~Script Code
 Hint="Enter JASS code that returns an ubersplat. Example: MyUbersplat() [UMSWE]"
  ="JASS Code"
  =~Script Code
  Hint="Enter JASS code that returns an image. Example: MyImage() [UMSWE]"
   ="JASS Code"
   =~Script Code
   Hint="Enter JASS code that returns a lightning. Example: MyLightning() [UMSWE]"
    ="JASS Code"
    =~Script Code
    Hint="Enter JASS code that returns a trackable object. Example: MyTrackable() [UMSWE]"
     ="JASS Code"
     =~Script Code
     Hint="Enter JASS code that returns an ability (integer). Example: 'Aloc' [UMSWE]"
      ="JASS Code"
      =~Script Code
      Hint="Enter JASS code that returns a boolean value. Example: MyBoolean() [UMSWE]"
       ="JASS Code"
       =~Script Code
       Hint="Enter JASS code that returns a destructible (~=handle). Example: MyDestructable() [UMSWE]"
        ="JASS Code"
        =~Script Code
        Hint="Enter JASS code that returns a destructible type (integer). Example: 'LTlt' [UMSWE]"
         ="JASS Code"
         =~Script Code
         Hint="Enter JASS code that returns a dialog. Example: MyDialog() [UMSWE]"
          ="JASS Code"
          =~Script Code
          Hint="Enter JASS code that returns a dialog button. Example: MyButton() [UMSWE]"
           ="JASS Code"
           =~Script Code
           Hint="Enter JASS code that returns an eventid value. Example: MyEventid() [UMSWE]"
            ="JASS Code"
            =~Script Code
            Hint="Enter JASS code that returns a Floating Text. Example: MyTexttag() [UMSWE]"
             ="JASS Code"
             =~Script Code
             Hint="Enter JASS code that returns an integer value. Example: 0xFF"
              ="JASS Code"
              =~Script Code
              Hint="Enter JASS code that returns an item (~=handle). Example: MyItem() [UMSWE]"
               ="JASS Code"
               =~Script Code
               Hint="Enter JASS code that returns an item type (integer). Example: 'phea' [UMSWE]"
                ="JASS Code"
                =~Script Code
                Hint="Enter JASS code that returns a leaderboard. Example: MyLeaderboard() [UMSWE]"
                 ="JASS Code"
                 =~Script Code
                 Hint="Enter JASS code that returns a multiboard value. Example: MyMultiboard() [UMSWE]"
                  ="JASS Code"
                  =~Script Code
                  Hint="Enter JASS code that returns a Multiboard Item. Example: MyMultiboardItem() [UMSWE]"
                   ="JASS Code"
                   =~Script Code
                   Hint="Enter JASS code that returns an orderid value (integer). Example: 852000 [UMSWE]"
                    ="JASS Code"
                    =~Script Code
                    Hint="Enter JASS code that returns a Player. Example: MyPlayer() [UMSWE]"
                     ="JASS Code"
                     =~Script Code
                     Hint="Enter JASS code that returns a Player Group. Example: MyForce() [UMSWE]"
                      ="JASS Code"
                      =~Script Code
                      Hint="Enter JASS code that returns a Point value. Example: MyLocation() [UMSWE]"
                       ="JASS Code"
                       =~Script Code
                       Hint="Enter JASS code that returns a Real value. Example: MyReal() [UMSWE]"
                        ="JASS Code"
                        =~Script Code
                        Hint="Enter JASS code that returns a rect value. Example: MyRect() [UMSWE]"
                         ="JASS Code"
                         =~Script Code
                         Hint="Enter JASS code that returns a region value. Example: MyRegion() [UMSWE]"
                          ="JASS Code"
                          =~Script Code
                          Hint="Enter JASS code that returns a special effect. Example: MyEffect() [UMSWE]"
                           ="JASS Code"
                           =~Script Code
                           Hint="Enter JASS code that returns a String. Example: MyString() [UMSWE]"
                            ="JASS Code"
                            =~Script Code
                            Hint="Enter JASS code that returns terrain deformation. Example: MyTerrainDeformation() [UMSWE]"
                             ="JASS Code"
                             =~Script Code
                             Hint="Enter JASS code that returns a Timer. Example: MyTimer() [UMSWE]"
                              ="JASS Code"
                              =~Script Code
                              Hint="Enter JASS code that returns a Timer Window value. Example: MyTimerDialog() [UMSWE]"
                               ="JASS Code"
                               =~Script Code
                               Hint="Enter JASS code that returns a Trigger. Example: MyTrigger() [UMSWE]"
                                ="JASS Code"
                                =~Script Code
                                Hint="Enter JASS code that returns a Trigger Action. Example: MyTriggerAction() [UMSWE]"
                                 ="JASS Code"
                                 =~Script Code
                                 Hint="Enter JASS code that returns a Trigger Condition. Example: MyTriggerCondition() [UMSWE]"
                                  ="JASS Code"
                                  =~Script Code
                                  Hint="Enter JASS code that returns an unit (~=handle). Example: MyUnit() [UMSWE]"
                                   ="JASS Code"
                                   =~Script Code
                                   Hint="Enter JASS code that returns an Unit Group. Example: MyGroup() [UMSWE]"
                                    ="JASS Code"
                                    =~Script Code
                                    Hint="Enter JASS code that returns an Unit Type (integer). Example: 'hpea' [UMSWE]"
                                     ="JASS Code"
                                     =~Script Code
                                     Hint="Enter JASS code that returns a Music file path (string). Use ; to separate paths if you are reffering to a music list. Example: MyMusic() [UMSWE]"
                                      ="JASS Code"
                                      =~Script Code
                                      Hint="Enter JASS code that returns a Hero Skill (integer). Example: 'AHbz' [UMSWE]"

// return success
QueuedTriggerRemoveByIndex="Remove Trigger From Trigger Queue by Index"
QueuedTriggerRemoveByIndex="Remove the trigger with index",~Index," from the trigger queue"
QueuedTriggerRemoveByIndexHint="Removes a trigger from the trigger queue, shifting other triggers down to fill the unused space. If the currently running trigger is removed in this manner, this function does NOT attempt to run the next trigger. [UMSWE]"
ReviveHeroLoc="Revive Hero (Instantly)"
ReviveHeroLoc="Successful: Instantly revive ",~Hero," at ",~Point,", ",~Show/Hide," revival graphics"
ReviveHeroLocHint="This revives a dead Hero at a spot on the map, even if the player has no altar.  You can also revive a Hero by issuing a 'Revive' order to an appropriate altar, targeting the hero you wish to revive. [UMSWE]"
UnitMakeAbilityPermanent="Unit Make Ability Permanent"
UnitMakeAbilityPermanent="Successful: For ",~whichUnit," set ability state to ",~permanent," for ability ",~abilityId
UnitMakeAbilityPermanentHint="[UMSWE]"
UnitAddAbilityBJ="Unit Add Ability"
UnitAddAbilityBJ="Successful: Add ",~Ability," to ",~Unit
UnitAddAbilityBJHint="[UMSWE]"
UnitRemoveAbilityBJ="Unit Remove Ability"
UnitRemoveAbilityBJ="Successful: Remove ",~Ability," from ",~Unit
UnitRemoveAbilityBJHint="In most cases, removing an ability in this manner is permanent. [UMSWE]"
UnitRemoveBuffBJ="Unit Remove Specific Buff"
UnitRemoveBuffBJ="Successful: Remove ",~Buff," buff from ",~Unit
UnitRemoveBuffBJHint="[UMSWE]"
UnitAddItemSwapped="Give Item To Hero"
UnitAddItemSwapped="Successful: Give ",~Item," to ",~Hero
UnitAddItemSwappedHint="[UMSWE]"
UnitAddItemByIdSwapped="Unit Create Item For Hero"
UnitAddItemByIdSwapped="Successful: Create ",~Item-Type," and give it to ",~Hero
UnitAddItemByIdSwappedHint="[UMSWE]"
UnitAddItemToSlotById="Create Item In Hero Inventory Slot"
UnitAddItemToSlotById="Successful: Give ",~Hero," a ",~Item," in slot ",~Index
UnitAddItemToSlotByIdHint="Creates an item in a specific item slot [UMSWE]"
UnitUseItem="Unit Use Item"
UnitUseItem="Successful: Order ",~Hero," to use ",~Item
UnitUseItemHint="[UMSWE]"
UnitUseItemTarget="Unit Use Item On A Unit"
UnitUseItemTarget="Successful: Order ",~Hero," to use ",~Item," on ",~Unit
UnitUseItemTargetHint="[UMSWE]"
UnitUseItemPointLoc="Unit Use Item On A Point"
UnitUseItemPointLoc="Successful: Order ",~Hero," to use ",~Item," on ",~Point
UnitUseItemPointLocHint="[UMSWE]"
UnitUseItemDestructable="Unit Use Item On A Destructible"
UnitUseItemDestructable="Successful: Order ",~Hero," to use ",~Item," on ",~Destructible
UnitUseItemDestructableHint="[UMSWE]"
IssueImmediateOrder="Unit Issue Order With No Target"
IssueImmediateOrder="Successful: Order ",~Unit," to ",~Order
IssueImmediateOrderHint="[UMSWE]"
IssuePointOrderLoc="Unit Issue Order Targeting A Point"
IssuePointOrderLoc="Successful: Order ",~Unit," to ",~Order," ",~Point
IssuePointOrderLocHint="[UMSWE]"
IssueTargetOrder="Unit Issue Order Targeting A Unit"
IssueTargetOrder="Successful: Order ",~Unit," to ",~Order," ",~Unit
IssueTargetOrderHint="[UMSWE]"
IssueTargetDestructableOrder="Unit Issue Order Targeting A Destructible"
IssueTargetDestructableOrder="Successful: Order ",~Unit," to ",~Order," ",~Destructible
IssueTargetDestructableOrderHint="[UMSWE]"
IssueTargetOrderBJ="Unit Issue Order Targeting An Item"
IssueTargetOrderBJ="Successful: Order ",~Unit," to ",~Order," ",~Item
IssueTargetOrderBJHint="[UMSWE]"
IssueBuildOrderByIdLocBJ="Unit Issue Build Order"
IssueBuildOrderByIdLocBJ="Successful: Order ",~Unit," to build a ",~Unit-Type," at ",~Point
IssueBuildOrderByIdLocBJHint="[UMSWE]"
IssueTrainOrderByIdBJ="Unit Issue Train/Upgrade Order"
IssueTrainOrderByIdBJ="Successful: Order ",~Unit," to train/upgrade to a ",~Unit-Type
IssueTrainOrderByIdBJHint="This action can be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep. [UMSWE]"
IssueUpgradeOrderByIdBJ="Unit Issue Research Order"
IssueUpgradeOrderByIdBJ="Successful: Order ",~Unit," to research ",~Tech-Type
IssueUpgradeOrderByIdBJHint="Weapons and armor upgrades can be researched multiple times via this trigger action. [UMSWE]"
IssueInstantTargetOrder="Give Item from Hero to Hero"
IssueInstantTargetOrder="Successful: Order ",~Hero," to ",~Order," ",~Item," to ",~Hero
IssueInstantTargetOrderHint="The ordered hero will walk to the target hero to hand the item over. [UMSWE]"
IssueNeutralImmediateOrderById="Player Buy Unit from Store"
IssueNeutralImmediateOrderById="Successful: For ",~Player," order ",~Shop," to sell a unit of type ",~Type
IssueNeutralImmediateOrderByIdHint="[UMSWE]"
GroupTargetOrder="Group Issue Order Targeting A Unit"
GroupTargetOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Unit
GroupTargetOrderHint="This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]"
GroupTargetDestructableOrder="Group Issue Order Targeting A Destructible"
GroupTargetDestructableOrder="Successful: Order ",~Unit Group," to ",~Order," ",~Destructible
GroupTargetDestructableOrderHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupTargetOrderBJ="Group Issue Order Targeting An Item"
GroupTargetOrderBJ="Successful: Order ",~Unit Group," to ",~Order," ",~Item
GroupTargetOrderBJHint="This will issue an order to at most 12 units from the specified unit group.  Note that 'Right-Click' orders issued this way do not always behave as they do when issued to units in-game. [UMSWE]"
GroupPointOrderLoc="Group Issue Order Targeting A Point"
GroupPointOrderLoc="Successful: Order ",~Unit Group," to ",~Order," ",~Point
GroupPointOrderLocHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupImmediateOrder="Group Issue Order With No Target"
GroupImmediateOrder="Successful: Order ",~Unit Group," to ",~Order
GroupImmediateOrderHint="This will issue an order to at most 12 units from the specified unit group. [UMSWE]"
GroupTrainOrderByIdBJ="Group Issue Train Order"
GroupTrainOrderByIdBJ="Successful: Order ",~Unit Group," to train a ",~Unit-Type
GroupTrainOrderByIdBJHint="This action can also be used to order a unit to upgrade itself.  A Town Hall, for example, can be upgraded by ordering it to train a Keep.  This will issue an order to at most 12 units from the specified unit group. [UMSWE]"

// compatibility
IsUnitInRangeXY="Unit Is In Range Of Coordinate Offset"
IsUnitInRangeXY="The distance between ",~Unit," and offset(",~X,", ",~Y,") matches ",~Range
IsUnitInRangeXYHint="Just here for COMPATIBILITY reasons. [UMSWE]"
GetUnitAbilityLevel="Level Of Buff For Unit"
GetUnitAbilityLevel="For ",~Unit," the level of ",~Buff
GetUnitAbilityLevelHint="ust here for COMPATIBILITY reasons. Would return 1 if the unit has the buff [UMSWE]"
AddSpellEffectByIdLoc="Create Spell Effect At Point"
AddSpellEffectByIdLoc="Create a special effect using ",~Ability," 's ",~art," at ",~Point
AddSpellEffectByIdLocHint="Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]"
AddSpellEffectById="Create Spell Effect At off-set"
AddSpellEffectById="Create a special effect using ",~Ability," 's ",~art," at ",~X," , ",~Y
AddSpellEffectByIdHint="Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]"
AddSpellEffectTargetById="Create Spell Effect On Unit"
AddSpellEffectTargetById="Create a special effect using ",~Ability," 's ",~art," on ",~Unit," 's ",~Attachment Point
AddSpellEffectTargetByIdHint="Just here for COMPATIBILITY reasons. Better use the new 'Get Ability Effect' function. [UMSWE]"
CreateMultiboard="Create Multiboard"
CreateMultiboard="Create new multiboard"
CreateMultiboardHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
MultiboardGetItem="Create Multiboard Item"
MultiboardGetItem="Create a new multiboard item for multiboard ",~board," in row ",~Row," and column ",~Column
MultiboardGetItemHint="Just here for COMPATIBILITY reasons. Better use the new official multiboard actions. [UMSWE]"
TriggerRegisterVariableEvent="Add Variable Event"
TriggerRegisterVariableEvent="Add the following variable event to ",~Trigger,": ",~Variable," ",~Operator," ",~Value
TriggerRegisterVariableEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterTimerExpireEvent="Add Timer Expires Event"
TriggerRegisterTimerExpireEvent="Add the following timer expires event to ",~Trigger,": ",~Timer," expires"
TriggerRegisterTimerExpireEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterDialogEvent="Add Dialog Event"
TriggerRegisterDialogEvent="Add the following dialog event to ",~Trigger,": A button in ",~Dialog," was clicked"
TriggerRegisterDialogEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterDialogButtonEvent="Add Dialog Button Clicked Event"
TriggerRegisterDialogButtonEvent="Add the following dialog event to ",~Trigger,": ",~Button," was clicked"
TriggerRegisterDialogButtonEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterGameEvent="Add Game Event"
TriggerRegisterGameEvent="Add the following game event to ",~Trigger,": Game Event: ",~GameEventOption
TriggerRegisterGameEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterEnterRegion="Add Unit Enters Rect (Conditional) Event"
TriggerRegisterEnterRegion="Add the following unit enters rect (conditional) event to ",~Trigger,": A unit enters ",~Rect," Matching: ",~Condition
TriggerRegisterEnterRegionHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterLeaveRegion="Add Unit Leaves Rect (Conditional) Event"
TriggerRegisterLeaveRegion="Add the following unit leaves rect (conditional) event to ",~Trigger,": A unit leaves ",~Rect," Matching: ",~Condition
TriggerRegisterLeaveRegionHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterPlayerEvent="Add Player Event"
TriggerRegisterPlayerEvent="Add the following player event to ",~Trigger,": ",~Player," ",~PlayerEventOption
TriggerRegisterPlayerEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterPlayerUnitEventSimple="Add Player-Owned Unit Event"
TriggerRegisterPlayerUnitEventSimple="Add the following player-owned unit event to ",~Trigger,": A unit owned by ",~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterPlayerUnitEvent="Add Player-Owned Unit Event (Conditional)"
TriggerRegisterPlayerUnitEvent="Add the following player-owned unit (conditional) event to ",~Trigger,": A unit owned by ",~Player," ",~Event," Matching: ",~Condition
TriggerRegisterPlayerUnitEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterPlayerStateEvent="Add Player Property Event"
TriggerRegisterPlayerStateEvent="Add the following player property event to ",~Trigger,": ",~Player," ",~PlayerState," ",~Operator," ",~Integer
TriggerRegisterPlayerStateEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterPlayerChatEvent="Add Chat Message Event"
TriggerRegisterPlayerChatEvent="Add the following chat message event to ",~Trigger,": ",~Player," sends a mesage containing ",~String," as ",~Match Type
TriggerRegisterPlayerChatEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterDeathEvent="Add Destructible Doodad Dies Event"
TriggerRegisterDeathEvent="Add the following destructible doodad event to ",~Trigger,": ",~Destructible Doodad," dies"
TriggerRegisterDeathEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterUnitStateEvent="Add Unit State Event"
TriggerRegisterUnitStateEvent="Add the following unit state event to ",~Trigger,": ",~Unit,"'s ",~UnitState," ",~Operator," ",~Real
TriggerRegisterUnitStateEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterUnitEvent="Add Specific Unit Event"
TriggerRegisterUnitEvent="Add the following specific unit event event to ",~Trigger,": ",~Unit," ",~UnitEvent
TriggerRegisterUnitEventHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerRegisterUnitInRangeSimple="Add Unit In Range Event"
TriggerRegisterUnitInRangeSimple="Add the following unit in range event to ",~Trigger,": A unit comes within ",~Real," of ",~Unit
TriggerRegisterUnitInRangeSimpleHint="Just here for COMPATIBILITY reasons. Better use the new add event action. [UMSWE]"
TriggerAddAction="Add Action"
TriggerAddAction="Take ",~Trigger," and add the action ",~Action
TriggerAddActionHint="Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Action'. [UMSWE]"
TriggerAddCondition="Add Condtion"
TriggerAddCondition="Take ",~Trigger," and add the condition ",~Condition
TriggerAddConditionHint="Just here for COMPATIBILITY reasons. Better use the trigger action 'Add Condition'. [UMSWE]"

[AIFunctionStrings]
